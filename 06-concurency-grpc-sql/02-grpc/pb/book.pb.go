// Code generated by protoc-gen-go. DO NOT EDIT.
// source: 02-grpc/pb/book.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	02-grpc/pb/book.proto

It has these top-level messages:
	Book
	SearchRequest
	SearchResponse
	Empty
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Book_Category int32

const (
	Book_Fiction    Book_Category = 0
	Book_NonFiction Book_Category = 1
	Book_Programing Book_Category = 2
)

var Book_Category_name = map[int32]string{
	0: "Fiction",
	1: "NonFiction",
	2: "Programing",
}
var Book_Category_value = map[string]int32{
	"Fiction":    0,
	"NonFiction": 1,
	"Programing": 2,
}

func (x Book_Category) String() string {
	return proto.EnumName(Book_Category_name, int32(x))
}
func (Book_Category) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Book struct {
	Title         string         `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Authors       []*Book_Author `protobuf:"bytes,2,rep,name=authors" json:"authors,omitempty"`
	YearOfRelease int32          `protobuf:"varint,4,opt,name=yearOfRelease" json:"yearOfRelease,omitempty"`
	Category      Book_Category  `protobuf:"varint,5,opt,name=category,enum=pb.Book_Category" json:"category,omitempty"`
}

func (m *Book) Reset()                    { *m = Book{} }
func (m *Book) String() string            { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()               {}
func (*Book) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Book) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Book) GetAuthors() []*Book_Author {
	if m != nil {
		return m.Authors
	}
	return nil
}

func (m *Book) GetYearOfRelease() int32 {
	if m != nil {
		return m.YearOfRelease
	}
	return 0
}

func (m *Book) GetCategory() Book_Category {
	if m != nil {
		return m.Category
	}
	return Book_Fiction
}

type Book_Author struct {
	FirstName string `protobuf:"bytes,1,opt,name=firstName" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=lastName" json:"lastName,omitempty"`
}

func (m *Book_Author) Reset()                    { *m = Book_Author{} }
func (m *Book_Author) String() string            { return proto.CompactTextString(m) }
func (*Book_Author) ProtoMessage()               {}
func (*Book_Author) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Book_Author) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Book_Author) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type SearchRequest struct {
	Query   string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	PerPage int32  `protobuf:"varint,2,opt,name=perPage" json:"perPage,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchRequest) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

type SearchResponse struct {
	Results []*Book `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SearchResponse) GetResults() []*Book {
	if m != nil {
		return m.Results
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Book)(nil), "pb.Book")
	proto.RegisterType((*Book_Author)(nil), "pb.Book.Author")
	proto.RegisterType((*SearchRequest)(nil), "pb.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "pb.SearchResponse")
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterEnum("pb.Book_Category", Book_Category_name, Book_Category_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Catalog service

type CatalogClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	RecentPurchases(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Catalog_RecentPurchasesClient, error)
}

type catalogClient struct {
	cc *grpc.ClientConn
}

func NewCatalogClient(cc *grpc.ClientConn) CatalogClient {
	return &catalogClient{cc}
}

func (c *catalogClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/pb.Catalog/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogClient) RecentPurchases(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Catalog_RecentPurchasesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Catalog_serviceDesc.Streams[0], c.cc, "/pb.Catalog/RecentPurchases", opts...)
	if err != nil {
		return nil, err
	}
	x := &catalogRecentPurchasesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Catalog_RecentPurchasesClient interface {
	Recv() (*Book, error)
	grpc.ClientStream
}

type catalogRecentPurchasesClient struct {
	grpc.ClientStream
}

func (x *catalogRecentPurchasesClient) Recv() (*Book, error) {
	m := new(Book)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Catalog service

type CatalogServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	RecentPurchases(*Empty, Catalog_RecentPurchasesServer) error
}

func RegisterCatalogServer(s *grpc.Server, srv CatalogServer) {
	s.RegisterService(&_Catalog_serviceDesc, srv)
}

func _Catalog_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Catalog/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Catalog_RecentPurchases_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CatalogServer).RecentPurchases(m, &catalogRecentPurchasesServer{stream})
}

type Catalog_RecentPurchasesServer interface {
	Send(*Book) error
	grpc.ServerStream
}

type catalogRecentPurchasesServer struct {
	grpc.ServerStream
}

func (x *catalogRecentPurchasesServer) Send(m *Book) error {
	return x.ServerStream.SendMsg(m)
}

var _Catalog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Catalog",
	HandlerType: (*CatalogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Catalog_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RecentPurchases",
			Handler:       _Catalog_RecentPurchases_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "02-grpc/pb/book.proto",
}

func init() { proto.RegisterFile("02-grpc/pb/book.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0x41, 0xaf, 0x93, 0x40,
	0x18, 0x14, 0x1e, 0x14, 0xfa, 0x35, 0xaf, 0xaf, 0x6e, 0x34, 0x21, 0xc4, 0x03, 0x21, 0x1e, 0xf0,
	0xf0, 0x68, 0x83, 0x26, 0x1e, 0x8d, 0xad, 0x7a, 0xf0, 0x50, 0x9b, 0xf5, 0x17, 0x2c, 0xf8, 0x95,
	0x92, 0x52, 0x76, 0xbb, 0xbb, 0x1c, 0xf8, 0x4f, 0xfe, 0x48, 0x03, 0x74, 0xf1, 0xf5, 0x38, 0x33,
	0xdf, 0xce, 0x4c, 0x26, 0x0b, 0x6f, 0x37, 0xd9, 0x73, 0x29, 0x45, 0xb1, 0x16, 0xf9, 0x3a, 0xe7,
	0xfc, 0x9c, 0x0a, 0xc9, 0x35, 0x27, 0xb6, 0xc8, 0xe3, 0xbf, 0x36, 0x38, 0x5b, 0xce, 0xcf, 0xe4,
	0x0d, 0xb8, 0xba, 0xd2, 0x35, 0x06, 0x56, 0x64, 0x25, 0x73, 0x3a, 0x02, 0xf2, 0x01, 0x3c, 0xd6,
	0xea, 0x13, 0x97, 0x2a, 0xb0, 0xa3, 0x87, 0x64, 0x91, 0x3d, 0xa5, 0x22, 0x4f, 0xfb, 0x07, 0xe9,
	0xd7, 0x81, 0xa7, 0x46, 0x27, 0xef, 0xe1, 0xb1, 0x43, 0x26, 0x7f, 0x1d, 0x29, 0xd6, 0xc8, 0x14,
	0x06, 0x4e, 0x64, 0x25, 0x2e, 0xbd, 0x27, 0xc9, 0x33, 0xf8, 0x05, 0xd3, 0x58, 0x72, 0xd9, 0x05,
	0x6e, 0x64, 0x25, 0xcb, 0xec, 0xf5, 0xe4, 0xb8, 0xbb, 0x09, 0x74, 0x3a, 0x09, 0xb7, 0x30, 0x1b,
	0x73, 0xc8, 0x3b, 0x98, 0x1f, 0x2b, 0xa9, 0xf4, 0x9e, 0x5d, 0x4c, 0xc7, 0xff, 0x04, 0x09, 0xc1,
	0xaf, 0xd9, 0x4d, 0xb4, 0x07, 0x71, 0xc2, 0xf1, 0x67, 0xf0, 0x8d, 0x33, 0x59, 0x80, 0xf7, 0xa3,
	0x2a, 0x74, 0xc5, 0x9b, 0xd5, 0x2b, 0xb2, 0x04, 0xd8, 0xf3, 0xc6, 0x60, 0xab, 0xc7, 0x07, 0xc9,
	0x4b, 0xc9, 0x2e, 0x55, 0x53, 0xae, 0xec, 0x9f, 0x8e, 0xff, 0xb0, 0x72, 0xe8, 0x42, 0x8e, 0xd5,
	0xbf, 0x31, 0x8d, 0xf1, 0x17, 0x78, 0xfc, 0x8d, 0x4c, 0x16, 0x27, 0x8a, 0xd7, 0x16, 0x95, 0xee,
	0x67, 0xbb, 0xb6, 0x28, 0x3b, 0x33, 0xdb, 0x00, 0x48, 0x00, 0x9e, 0x40, 0x79, 0x60, 0xe5, 0xd8,
	0xc6, 0xa5, 0x06, 0xc6, 0x9f, 0x60, 0x69, 0x0c, 0x94, 0xe0, 0x8d, 0x42, 0x12, 0x83, 0x27, 0x51,
	0xb5, 0xb5, 0x56, 0x81, 0x35, 0x4c, 0xec, 0x9b, 0x41, 0xa8, 0x11, 0x62, 0x0f, 0xdc, 0xef, 0x17,
	0xa1, 0xbb, 0xec, 0x0f, 0x78, 0x3b, 0xa6, 0x59, 0xcd, 0x4b, 0xb2, 0x86, 0xd9, 0xe8, 0x44, 0x86,
	0x05, 0xef, 0x6a, 0x85, 0xe4, 0x25, 0x75, 0x0b, 0x4a, 0xe0, 0x89, 0x62, 0x81, 0x8d, 0x3e, 0xb4,
	0xb2, 0x38, 0x31, 0x85, 0x8a, 0xcc, 0xfb, 0xb3, 0xc1, 0x39, 0x9c, 0x52, 0x37, 0x56, 0x3e, 0x1b,
	0xfe, 0xc7, 0xc7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xad, 0xb4, 0x6c, 0x38, 0x02, 0x00,
	0x00,
}
